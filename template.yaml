Transform: AWS::Serverless-2016-10-31

Parameters:
  Product:
    Description: Product name
    Type: String

  Environment:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: development

  SwaggerS3Path:
    Description: An S3 path to swagger.yaml that will be embeded into the API gateway definition
    Type: String

Globals:
  Function:
    Runtime: ruby2.5
    Timeout: 10
    Environment:
      Variables:
        S3_BUCKET: !Ref S3Bucket
        DOCUMENTS_TABLE: !Ref DocumentsDBTable
        SSM_PATH: !Sub "/${Product}/${Environment}"
    Layers:
      - !Ref SharedLayer

Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Environment
      DefinitionBody:
        Fn::Transform:
          Name: 'AWS::Include'
          Parameters:
            Location: !Ref SwaggerS3Path

  CreateDocumentFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: 'app/create_document/'
      Handler: lambda.CreateDocument::Lambda.handler
      Layers:
        - !Ref CreateDocumentGemsLayer
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref S3Bucket
        - DynamoDBCrudPolicy:
            TableName: !Ref DocumentsDBTable
        - SSMParameterReadPolicy:
            ParameterName: !Sub "/${Product}/${Environment}/*"
      Events:
        PostDocumentApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /documents
            Method: POST

  CreateDocumentGemsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: create-document-gems
      ContentUri: layers/create_document/
      CompatibleRuntimes:
        - ruby2.5
      RetentionPolicy: Delete

  ListenDocumentStreamFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: 'app/listen_document_stream/'
      Handler: lambda.ListenDocumentStream::Lambda.handler
      Environment:
        Variables:
          DOCUMENTS_TOPIC: !Ref DocumentsSNSTopic
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt DocumentsDBTable.StreamArn
            BatchSize: 10
            # MaximumBatchingWindowInSeconds: 10
            StartingPosition: LATEST
      Layers:
        - !Ref ListenDocumentStreamGemsLayer
      Policies:
        - DispatchrFunctionInvokePolicy
        - DynamoDBReadPolicy:
            TableName: !Ref DocumentsDBTable
        - SNSPublishMessagePolicy:
            TopicName: !Ref DocumentsSNSTopic
        - SSMParameterReadPolicy:
            ParameterName: !Sub "/${Product}/${Environment}/*"

  ListenDocumentStreamGemsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: listen-document-stream-gems
      ContentUri: layers/listen_document_stream/
      CompatibleRuntimes:
        - ruby2.5
      RetentionPolicy: Delete

  DispatchrFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: 'app/dispatchr/'
      Handler: lambda.Dispatchr::Lambda.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DocumentsDBTable
        - LambdaInvokePolicy:
            FunctionName: !Ref RenderTemplateFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GeneratePdfFunction

  RenderTemplateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: 'app/render_template/'
      Handler: lambda.RenderTemplate::Lambda.handler
      Layers:
        - !Ref RenderTemplateRubyGemsLayer
      Policies:
        - DispatchrFunctionInvokePolicy
        - S3CrudPolicy:
            BucketName: !Ref S3Bucket

  RenderTemplateRubyGemsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: render-template-gems
      ContentUri: layers/render_template/
      CompatibleRuntimes:
        - ruby2.5
      RetentionPolicy: Delete

  GeneratePdfFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: 'app/generate_pdf/'
      Handler: lambda.GeneratePdf::Lambda.handler
      MemorySize: 512
      Layers:
        - arn:aws:lambda:ap-southeast-2:764866452798:layer:libreoffice:1
        - !Ref GeneratePdfRubyGemsLayer
      Policies:
        - DispatchrFunctionInvokePolicy
        - S3CrudPolicy:
            BucketName: !Ref S3Bucket

  GeneratePdfRubyGemsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: generage-pdf-gems
      ContentUri: layers/generate_pdf/
      CompatibleRuntimes:
        - ruby2.5
      RetentionPolicy: Delete

  SharedLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: shared
      ContentUri: layers/shared/
      CompatibleRuntimes:
        - ruby2.5
      RetentionPolicy: Delete

  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub "${Product}-${Environment}"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          -
            ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          -
            ExpirationInDays: 14
            Status: Enabled

  DocumentsDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true

  DocumentsSNSTopic:
    Type: AWS::SNS::Topic

  DispatchrFunctionInvokePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "invoke-dispatchr-function"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action: "lambda:InvokeFunction"
            Resource: !Sub "arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:${DispatchrFunction}*"

  S3BucketSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description : "S3 Bucket"
      Name: !Sub "/${Product}/${Environment}/S3_BUCKET"
      Type: String
      Value: !Ref S3Bucket

  DocumentsSNSTopicSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description : "Documents SNS Topic"
      Name: !Sub "/${Product}/${Environment}/DOCUMENTS_SNS_TOPIC"
      Type: String
      Value: !Ref DocumentsSNSTopic

  DispatchrFunctionSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description : "Dispatchr Function"
      Name: !Sub "/${Product}/${Environment}/functions/DISPATCHR_FUNCTION"
      Type: String
      Value: !Ref DispatchrFunction

  RenderTemplateFunctionSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description : "Render Template Function"
      Name: !Sub "/${Product}/${Environment}/functions/RENDER_TEMPLATE_FUNCTION"
      Type: String
      Value: !Ref RenderTemplateFunction

  GeneratePdfFunctionSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description : "Generate PDF Function"
      Name: !Sub "/${Product}/${Environment}/functions/GENERATE_PDF_FUNCTION"
      Type: String
      Value: !Ref GeneratePdfFunction

  # DeadLetterQueue:
  #   Type: AWS::SQS::Queue
  #   Properties:
  #     MessageRetentionPeriod: 1209600

  # DeadLetterQueueDepthAlarm:
  #   Type: AWS::CloudWatch::Alarm
  #   Properties:
  #     AlarmDescription: "Alarm if DLQs contain messages"
  #     Namespace: "AWS/SQS"
  #     MetricName: ApproximateNumberOfMessagesVisible
  #     Dimensions:
  #       - Name: LetterQueueName
  #         Value : !GetAtt DeadLetterQueue.QueueName
  #     Statistic: Sum
  #     Period: 300
  #     EvaluationPeriods: 1
  #     Threshold: 0
  #     ComparisonOperator: GreaterThanThreshold
